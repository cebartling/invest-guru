type HelloWorldResult {
    content: String!
}

type MovingAverageObservation {
    date: String!
    value: Float!
}

type Company {
    name: String!
    symbol: String!
}

type SimpleMovingAverageAnalytic {
    company: Company!
    simpleMovingAverages50Days: [MovingAverageObservation]!
    simpleMovingAverages300Days: [MovingAverageObservation]!
}

type Note {
    NoteId: ID!
    title: String
    content: String
}

type PaginatedNotes {
    notes: [Note!]!
    nextToken: String
}

type Query {
    helloWorld(name: String!): HelloWorldResult!
    simpleMovingAverageAnalytic(symbol: String!): SimpleMovingAverageAnalytic!
    allNotes(limit: Int, nextToken: String): PaginatedNotes!
    getNote(NoteId: ID!): Note
}

type Mutation {
    saveNote(NoteId: ID!, title: String!, content: String!): Note
    deleteNote(NoteId: ID!): Note
}

type Schema {
    query: Query
    mutation: Mutation
}

